from . import Image as Image
from ._util import isPath as isPath
from typing import Any

MAXBLOCK: int
SAFEBLOCK: Any
LOAD_TRUNCATED_IMAGES: bool
ERRORS: Any

def raise_oserror(error) -> None: ...
def raise_ioerror(error): ...

class ImageFile(Image.Image):
    custom_mimetype: Any
    tile: Any
    readonly: int
    decoderconfig: Any
    decodermaxblock: Any
    fp: Any
    filename: Any
    def __init__(self, fp: Any | None = ..., filename: Any | None = ...) -> None: ...
    def get_format_mimetype(self): ...
    def verify(self) -> None: ...
    map: Any
    im: Any
    def load(self): ...
    def load_prepare(self) -> None: ...
    def load_end(self) -> None: ...

class StubImageFile(ImageFile):
    __class__: Any
    __dict__: Any
    def load(self) -> None: ...

class Parser:
    incremental: Any
    image: Any
    data: Any
    decoder: Any
    offset: int
    finished: int
    def reset(self) -> None: ...
    decode: Any
    def feed(self, data) -> None: ...
    def __enter__(self): ...
    def __exit__(self, *args) -> None: ...
    def close(self): ...

class PyCodecState:
    xsize: int
    ysize: int
    xoff: int
    yoff: int
    def __init__(self) -> None: ...
    def extents(self): ...

class PyDecoder:
    im: Any
    state: Any
    fd: Any
    mode: Any
    def __init__(self, mode, *args) -> None: ...
    args: Any
    def init(self, args) -> None: ...
    @property
    def pulls_fd(self): ...
    def decode(self, buffer) -> None: ...
    def cleanup(self) -> None: ...
    def setfd(self, fd) -> None: ...
    def setimage(self, im, extents: Any | None = ...) -> None: ...
    def set_as_raw(self, data, rawmode: Any | None = ...) -> None: ...
