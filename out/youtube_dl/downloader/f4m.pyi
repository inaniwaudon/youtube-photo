import io
from ..compat import compat_b64decode as compat_b64decode, compat_etree_fromstring as compat_etree_fromstring, compat_struct_pack as compat_struct_pack, compat_struct_unpack as compat_struct_unpack, compat_urllib_error as compat_urllib_error, compat_urllib_parse_urlparse as compat_urllib_parse_urlparse, compat_urlparse as compat_urlparse
from ..utils import fix_xml_ampersands as fix_xml_ampersands, xpath_text as xpath_text
from .fragment import FragmentFD as FragmentFD

class DataTruncatedError(Exception): ...

class FlvReader(io.BytesIO):
    def read_bytes(self, n): ...
    def read_unsigned_long_long(self): ...
    def read_unsigned_int(self): ...
    def read_unsigned_char(self): ...
    def read_string(self): ...
    def read_box_info(self): ...
    def read_asrt(self): ...
    def read_afrt(self): ...
    def read_abst(self): ...
    def read_bootstrap_info(self): ...

def read_bootstrap_info(bootstrap_bytes): ...
def build_fragments_list(boot_info): ...
def write_unsigned_int(stream, val) -> None: ...
def write_unsigned_int_24(stream, val) -> None: ...
def write_flv_header(stream) -> None: ...
def write_metadata_tag(stream, metadata) -> None: ...
def remove_encrypted_media(media): ...
def get_base_url(manifest): ...

class F4mFD(FragmentFD):
    FD_NAME: str
    def real_download(self, filename, info_dict): ...
